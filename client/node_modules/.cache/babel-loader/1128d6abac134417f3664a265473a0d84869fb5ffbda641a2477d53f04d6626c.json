{"ast":null,"code":"var _jsxFileName = \"/Users/max/Desktop/bootcamp_2022/fpc-fullstack/client/src/components/Ingredient.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingredient(props) {\n  let iconButton;\n  if (props.type === \"requests\") {\n    iconButton = /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-regular fa-trash-can icon-button delete-button\",\n      onClick: props.removeRequestedIngredient(props.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"results\") {\n    iconButton = /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-solid fa-arrow-rotate-left icon-button add-button\",\n      onClick: props.addRequestedIngredient(props.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  function getClassName() {\n    let className = \"ingredient\";\n    if (props.affinity === 1) {\n      //normal text\n    } else if (props.affinity === 2) {\n      //bold text\n      className += \" bold\";\n    } else if (props.affinity >= 3) {\n      //bold all caps\n      className += \" bold caps\";\n    }\n    return className;\n  }\n\n  //provides the last bit of formatting for the ingredient names.\n  function getValue() {\n    let value = props.value;\n    value = value.replace(\"_\", \" \");\n    if (props.affinity === 4) {\n      value = \"*\" + value;\n    }\n    return value;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getClassName(),\n      children: getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), iconButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = Ingredient;\nvar _c;\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"names":["React","Ingredient","props","iconButton","type","removeRequestedIngredient","value","addRequestedIngredient","getClassName","className","affinity","getValue","replace"],"sources":["/Users/max/Desktop/bootcamp_2022/fpc-fullstack/client/src/components/Ingredient.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Ingredient(props) {\n  let iconButton;\n  if (props.type === \"requests\") {\n    iconButton = (\n      <i\n        className=\"fa-regular fa-trash-can icon-button delete-button\"\n        onClick={props.removeRequestedIngredient(props.value)}\n      ></i>\n    );\n  } else if (props.type === \"results\") {\n    iconButton = (\n      <i\n        className=\"fa-solid fa-arrow-rotate-left icon-button add-button\"\n        onClick={props.addRequestedIngredient(props.value)}\n      ></i>\n    );\n  }\n\n  function getClassName() {\n    let className = \"ingredient\";\n\n    if (props.affinity === 1) {\n      //normal text\n    } else if (props.affinity === 2) {\n      //bold text\n      className += \" bold\";\n    } else if (props.affinity >= 3) {\n      //bold all caps\n      className += \" bold caps\";\n    }\n\n    return className;\n  }\n\n  //provides the last bit of formatting for the ingredient names.\n  function getValue() {\n    let value = props.value;\n\n    value = value.replace(\"_\", \" \");\n\n    if (props.affinity === 4) {\n      value = \"*\" + value;\n    }\n\n    return value;\n  }\n\n  return (\n    <div className=\"ingredient-container\">\n      <div className={getClassName()}>{getValue()}</div>\n      {iconButton}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,UAAU,CAACC,KAAK,EAAE;EACxC,IAAIC,UAAU;EACd,IAAID,KAAK,CAACE,IAAI,KAAK,UAAU,EAAE;IAC7BD,UAAU,gBACR;MACE,SAAS,EAAC,mDAAmD;MAC7D,OAAO,EAAED,KAAK,CAACG,yBAAyB,CAACH,KAAK,CAACI,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAEzD;EACH,CAAC,MAAM,IAAIJ,KAAK,CAACE,IAAI,KAAK,SAAS,EAAE;IACnCD,UAAU,gBACR;MACE,SAAS,EAAC,sDAAsD;MAChE,OAAO,EAAED,KAAK,CAACK,sBAAsB,CAACL,KAAK,CAACI,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAEtD;EACH;EAEA,SAASE,YAAY,GAAG;IACtB,IAAIC,SAAS,GAAG,YAAY;IAE5B,IAAIP,KAAK,CAACQ,QAAQ,KAAK,CAAC,EAAE;MACxB;IAAA,CACD,MAAM,IAAIR,KAAK,CAACQ,QAAQ,KAAK,CAAC,EAAE;MAC/B;MACAD,SAAS,IAAI,OAAO;IACtB,CAAC,MAAM,IAAIP,KAAK,CAACQ,QAAQ,IAAI,CAAC,EAAE;MAC9B;MACAD,SAAS,IAAI,YAAY;IAC3B;IAEA,OAAOA,SAAS;EAClB;;EAEA;EACA,SAASE,QAAQ,GAAG;IAClB,IAAIL,KAAK,GAAGJ,KAAK,CAACI,KAAK;IAEvBA,KAAK,GAAGA,KAAK,CAACM,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAE/B,IAAIV,KAAK,CAACQ,QAAQ,KAAK,CAAC,EAAE;MACxBJ,KAAK,GAAG,GAAG,GAAGA,KAAK;IACrB;IAEA,OAAOA,KAAK;EACd;EAEA,oBACE;IAAK,SAAS,EAAC,sBAAsB;IAAA,wBACnC;MAAK,SAAS,EAAEE,YAAY,EAAG;MAAA,UAAEG,QAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,EACjDR,UAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEV;AAAC,KArDuBF,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}