{"ast":null,"code":"var _jsxFileName = \"/Users/max/Desktop/bootcamp_2022/fpc-fullstack/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport InputField from \"./components/InputField.js\";\nimport BodyPanel from \"./components/BodyPanel.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //state\n  const [requestedIngredients, setRequestedIngredients] = useState([\"apple\", \"bacon\"]);\n  const [resultIngredients, setResultIngredients] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      //ask the server for a list of common pairings of requestedIngredients\n      console.log(\"fetching data...\");\n      const response = await fetch(\"/api\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ingredients: requestedIngredients\n        })\n      });\n      const data = await response.json();\n      setResultIngredients(data.body);\n    }\n    fetchData();\n  }, [requestedIngredients, resultIngredients]);\n  console.log(\"set resultIngredients to:\");\n  console.log(resultIngredients);\n  function addRequestedIngredient(ingredient) {\n    //TODO: check for validity\n\n    setRequestedIngredients([...requestedIngredients, ingredient]);\n  }\n\n  //component tree\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      addRequestedIngredient: addRequestedIngredient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BodyPanel, {\n      requestedIngredients: requestedIngredients,\n      setRequestedIngredients: setRequestedIngredients,\n      resultIngredients: resultIngredients,\n      setResultIngredients: setResultIngredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"4bPGZ4dedgNypiprUPNZ4CI1NQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","InputField","BodyPanel","App","requestedIngredients","setRequestedIngredients","resultIngredients","setResultIngredients","fetchData","console","log","response","fetch","method","headers","body","JSON","stringify","ingredients","data","json","addRequestedIngredient","ingredient"],"sources":["/Users/max/Desktop/bootcamp_2022/fpc-fullstack/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport InputField from \"./components/InputField.js\";\nimport BodyPanel from \"./components/BodyPanel.js\";\n\nfunction App() {\n  //state\n  const [requestedIngredients, setRequestedIngredients] = useState([\n    \"apple\",\n    \"bacon\",\n  ]);\n\n  const [resultIngredients, setResultIngredients] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      //ask the server for a list of common pairings of requestedIngredients\n      console.log(\"fetching data...\");\n      const response = await fetch(\"/api\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ ingredients: requestedIngredients }),\n      });\n\n      const data = await response.json();\n      setResultIngredients(data.body);\n    }\n    fetchData();\n  }, [requestedIngredients, resultIngredients]);\n\n  console.log(\"set resultIngredients to:\");\n  console.log(resultIngredients);\n  function addRequestedIngredient(ingredient) {\n    //TODO: check for validity\n\n    setRequestedIngredients([...requestedIngredients, ingredient]);\n  }\n\n  //component tree\n  return (\n    <>\n      <Header />\n      <InputField addRequestedIngredient={addRequestedIngredient} />\n      <BodyPanel\n        requestedIngredients={requestedIngredients}\n        setRequestedIngredients={setRequestedIngredients}\n        resultIngredients={resultIngredients}\n        setResultIngredients={setResultIngredients}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAAA;AAElD,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGN,QAAQ,CAAC,CAC/D,OAAO,EACP,OAAO,CACR,CAAC;EAEF,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACd,eAAeU,SAAS,GAAG;MACzB;MACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAM,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,WAAW,EAAEd;QAAqB,CAAC;MAC5D,CAAC,CAAC;MAEF,MAAMe,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;MAClCb,oBAAoB,CAACY,IAAI,CAACJ,IAAI,CAAC;IACjC;IACAP,SAAS,EAAE;EACb,CAAC,EAAE,CAACJ,oBAAoB,EAAEE,iBAAiB,CAAC,CAAC;EAE7CG,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxCD,OAAO,CAACC,GAAG,CAACJ,iBAAiB,CAAC;EAC9B,SAASe,sBAAsB,CAACC,UAAU,EAAE;IAC1C;;IAEAjB,uBAAuB,CAAC,CAAC,GAAGD,oBAAoB,EAAEkB,UAAU,CAAC,CAAC;EAChE;;EAEA;EACA,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,UAAU;MAAC,sBAAsB,EAAED;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9D,QAAC,SAAS;MACR,oBAAoB,EAAEjB,oBAAqB;MAC3C,uBAAuB,EAAEC,uBAAwB;MACjD,iBAAiB,EAAEC,iBAAkB;MACrC,oBAAoB,EAAEC;IAAqB;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA,gBACD;AAEP;AAAC,GA9CQJ,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}